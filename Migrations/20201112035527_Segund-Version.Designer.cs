// <auto-generated />
using System;
using BENT1C.Grupo5.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BENT1C.Grupo5.Migrations
{
    [DbContext(typeof(ErpDbContext))]
    [Migration("20201112035527_Segund-Version")]
    partial class SegundVersion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.CentroDeCosto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GerenciaId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MontoMaximo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("GerenciaId");

                    b.ToTable("CentroDeCostos");
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Empleado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.Property<string>("Dni")
                        .HasColumnType("TEXT")
                        .HasMaxLength(15);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<bool>("EmpleadoActivo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EmpleadoRrhh")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FotoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Legajo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.Property<string>("ObraSocial")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.Property<byte[]>("Password")
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("FotoId")
                        .IsUnique();

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT")
                        .HasMaxLength(7);

                    b.Property<string>("EmailContacto")
                        .HasColumnType("TEXT")
                        .HasMaxLength(8);

                    b.Property<Guid>("LogoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rubro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefonoContacto")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("LogoId")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Gasto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CentroDeCostoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<Guid>("EmpleadoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Monto")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CentroDeCostoId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Gerencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DireccionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsGerenciaGeneral")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<Guid>("ResponsableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DireccionId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ResponsableId");

                    b.ToTable("Gerencias");
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Imagen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Posicion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<Guid>("EmpleadoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GerenciaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(15);

                    b.Property<Guid?>("ResponsableId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Sueldo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId")
                        .IsUnique();

                    b.HasIndex("GerenciaId");

                    b.HasIndex("ResponsableId");

                    b.ToTable("Posiciones");
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Telefono", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmpleadoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .HasColumnType("TEXT")
                        .HasMaxLength(15);

                    b.Property<Guid>("TipoTelefonoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("TipoTelefonoId");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.TipoTelefono", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TipoTelefonos");
                });

            modelBuilder.Entity("BENT1C.Grupo5.Models.Administrador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Legajo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.Property<byte[]>("Password")
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.CentroDeCosto", b =>
                {
                    b.HasOne("BENT1C.Grupo5.Entidades.Gerencia", "Gerencia")
                        .WithMany()
                        .HasForeignKey("GerenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Empleado", b =>
                {
                    b.HasOne("BENT1C.Grupo5.Entidades.Imagen", "Foto")
                        .WithOne("Empleado")
                        .HasForeignKey("BENT1C.Grupo5.Entidades.Empleado", "FotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Empresa", b =>
                {
                    b.HasOne("BENT1C.Grupo5.Entidades.Imagen", "Logo")
                        .WithOne("Empresa")
                        .HasForeignKey("BENT1C.Grupo5.Entidades.Empresa", "LogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Gasto", b =>
                {
                    b.HasOne("BENT1C.Grupo5.Entidades.CentroDeCosto", "CentroDeCosto")
                        .WithMany("Gastos")
                        .HasForeignKey("CentroDeCostoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BENT1C.Grupo5.Entidades.Empleado", "Empleado")
                        .WithMany("Gastos")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Gerencia", b =>
                {
                    b.HasOne("BENT1C.Grupo5.Entidades.Gerencia", "Direccion")
                        .WithMany("Gerencias")
                        .HasForeignKey("DireccionId");

                    b.HasOne("BENT1C.Grupo5.Entidades.Empresa", "Empresa")
                        .WithMany("Gerencias")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BENT1C.Grupo5.Entidades.Empleado", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Posicion", b =>
                {
                    b.HasOne("BENT1C.Grupo5.Entidades.Empleado", "Empleado")
                        .WithOne("Posicion")
                        .HasForeignKey("BENT1C.Grupo5.Entidades.Posicion", "EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BENT1C.Grupo5.Entidades.Gerencia", "Gerencia")
                        .WithMany("Posiciones")
                        .HasForeignKey("GerenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BENT1C.Grupo5.Entidades.Posicion", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId");
                });

            modelBuilder.Entity("BENT1C.Grupo5.Entidades.Telefono", b =>
                {
                    b.HasOne("BENT1C.Grupo5.Entidades.Empleado", "Empleado")
                        .WithMany("Telefonos")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BENT1C.Grupo5.Entidades.TipoTelefono", "TipoTelefono")
                        .WithMany("Telefonos")
                        .HasForeignKey("TipoTelefonoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
